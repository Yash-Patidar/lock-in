/* Tiptap Editor Dark Theme Styles */
.tiptap-editor-container {
  --tiptap-text-color: rgba(255, 255, 255, 0.9);
  --tiptap-heading-color: rgba(255, 255, 255, 1);
  --tiptap-muted-color: rgba(255, 255, 255, 0.6);
  --tiptap-border-color: rgba(255, 255, 255, 0.1);
  --tiptap-accent-color: rgba(0, 255, 255, 0.8);
}

/* Editor Container */
.tiptap-editor .ProseMirror {
  background: transparent !important;
  border: none !important;
  outline: none !important;
  color: var(--tiptap-text-color) !important;
  font-size: 16px;
  line-height: 1.7;
  padding: 1rem 0;
  min-height: 400px;
}

/* Headings - Override prose styles */
.tiptap-editor h1,
.tiptap-editor .ProseMirror h1,
.tiptap-editor-container h1 {
  color: var(--tiptap-heading-color) !important;
  font-size: 2rem !important;
  font-weight: bold !important;
  margin: 1.5rem 0 1rem 0 !important;
  border-bottom: 1px solid var(--tiptap-border-color) !important;
  padding-bottom: 0.5rem !important;
  line-height: 1.2 !important;
}

.tiptap-editor h2,
.tiptap-editor .ProseMirror h2,
.tiptap-editor-container h2 {
  color: var(--tiptap-heading-color) !important;
  font-size: 1.5rem !important;
  font-weight: bold !important;
  margin: 1.25rem 0 0.75rem 0 !important;
  line-height: 1.3 !important;
}

.tiptap-editor h3,
.tiptap-editor .ProseMirror h3,
.tiptap-editor-container h3 {
  color: var(--tiptap-heading-color) !important;
  font-size: 1.25rem !important;
  font-weight: bold !important;
  margin: 1rem 0 0.5rem 0 !important;
  line-height: 1.4 !important;
}

/* Paragraphs */
.tiptap-editor .ProseMirror p {
  color: var(--tiptap-text-color) !important;
  margin: 0.75rem 0;
}

/* Lists */
.tiptap-editor .ProseMirror ul,
.tiptap-editor .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.75rem 0;
}

.tiptap-editor .ProseMirror li {
  color: var(--tiptap-text-color) !important;
  margin: 0.25rem 0;
}

.tiptap-editor .ProseMirror li::marker {
  color: var(--tiptap-accent-color) !important;
}

/* Task Lists - Beautiful To-Do styling */
.tiptap-editor .ProseMirror ul[data-type="taskList"],
.tiptap-editor ul[data-type="taskList"],
.tiptap-editor-container ul[data-type="taskList"] {
  list-style: none !important;
  padding-left: 0 !important;
  margin: 1.5rem 0 !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] li,
.tiptap-editor ul[data-type="taskList"] li,
.tiptap-editor-container ul[data-type="taskList"] li {
  display: flex !important;
  align-items: flex-start !important;
  gap: 0.875rem !important;
  margin: 0.75rem 0 !important;
  padding: 0.5rem 0.75rem !important;
  border-radius: 0.5rem !important;
  transition: all 0.2s ease !important;
  background: rgba(255, 255, 255, 0.02) !important;
  border: 1px solid rgba(255, 255, 255, 0.05) !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] li:hover,
.tiptap-editor ul[data-type="taskList"] li:hover,
.tiptap-editor-container ul[data-type="taskList"] li:hover {
  background: rgba(255, 255, 255, 0.05) !important;
  border-color: rgba(0, 255, 255, 0.2) !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] li > label,
.tiptap-editor ul[data-type="taskList"] li > label,
.tiptap-editor-container ul[data-type="taskList"] li > label {
  flex-shrink: 0 !important;
  margin-right: 0 !important;
  margin-top: 0.125rem !important;
  position: relative !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] li > div,
.tiptap-editor ul[data-type="taskList"] li > div,
.tiptap-editor-container ul[data-type="taskList"] li > div {
  flex: 1 !important;
  min-height: 1.5rem !important;
  display: flex !important;
  align-items: center !important;
}

/* Custom Beautiful Checkbox */
.tiptap-editor .ProseMirror ul[data-type="taskList"] input[type="checkbox"],
.tiptap-editor ul[data-type="taskList"] input[type="checkbox"],
.tiptap-editor-container ul[data-type="taskList"] input[type="checkbox"] {
  appearance: none !important;
  width: 1.25rem !important;
  height: 1.25rem !important;
  border-radius: 0.375rem !important;
  border: 2px solid rgba(0, 255, 255, 0.3) !important;
  background: rgba(0, 0, 0, 0.2) !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
  position: relative !important;
  outline: none !important;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] input[type="checkbox"]:hover,
.tiptap-editor ul[data-type="taskList"] input[type="checkbox"]:hover,
.tiptap-editor-container ul[data-type="taskList"] input[type="checkbox"]:hover {
  border-color: rgba(0, 255, 255, 0.5) !important;
  background: rgba(0, 255, 255, 0.05) !important;
  transform: scale(1.05) !important;
  box-shadow: 0 4px 8px rgba(0, 255, 255, 0.1) !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] input[type="checkbox"]:checked,
.tiptap-editor ul[data-type="taskList"] input[type="checkbox"]:checked,
.tiptap-editor-container ul[data-type="taskList"] input[type="checkbox"]:checked {
  background: linear-gradient(135deg, rgba(0, 255, 255, 0.8), rgba(0, 200, 255, 0.9)) !important;
  border-color: rgba(0, 255, 255, 0.8) !important;
  box-shadow: 0 4px 12px rgba(0, 255, 255, 0.2) !important;
}

/* Custom Checkmark */
.tiptap-editor .ProseMirror ul[data-type="taskList"] input[type="checkbox"]:checked::after,
.tiptap-editor ul[data-type="taskList"] input[type="checkbox"]:checked::after,
.tiptap-editor-container ul[data-type="taskList"] input[type="checkbox"]:checked::after {
  content: 'âœ“' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 0.75rem !important;
  font-weight: bold !important;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3) !important;
}

/* Completed task styling */
.tiptap-editor .ProseMirror ul[data-type="taskList"] li[data-checked="true"],
.tiptap-editor ul[data-type="taskList"] li[data-checked="true"],
.tiptap-editor-container ul[data-type="taskList"] li[data-checked="true"] {
  background: rgba(0, 255, 255, 0.02) !important;
  border-color: rgba(0, 255, 255, 0.1) !important;
}

.tiptap-editor .ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div,
.tiptap-editor ul[data-type="taskList"] li[data-checked="true"] > div,
.tiptap-editor-container ul[data-type="taskList"] li[data-checked="true"] > div {
  text-decoration: line-through !important;
  color: var(--tiptap-muted-color) !important;
  opacity: 0.7 !important;
}

/* Focus states */
.tiptap-editor .ProseMirror ul[data-type="taskList"] input[type="checkbox"]:focus,
.tiptap-editor ul[data-type="taskList"] input[type="checkbox"]:focus,
.tiptap-editor-container ul[data-type="taskList"] input[type="checkbox"]:focus {
  outline: 2px solid rgba(0, 255, 255, 0.3) !important;
  outline-offset: 2px !important;
}

/* Blockquotes */
.tiptap-editor .ProseMirror blockquote {
  border-left: 3px solid var(--tiptap-accent-color);
  padding-left: 1rem;
  margin: 1rem 0;
  color: var(--tiptap-muted-color) !important;
  background: rgba(0, 255, 255, 0.05);
  border-radius: 0.25rem;
  font-style: italic;
}

/* Code */
.tiptap-editor .ProseMirror code {
  background: rgba(255, 255, 255, 0.1) !important;
  color: var(--tiptap-accent-color) !important;
  padding: 0.2rem 0.4rem;
  border-radius: 0.25rem;
  font-size: 0.9em;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
}

.tiptap-editor .ProseMirror pre {
  background: rgba(0, 0, 0, 0.3) !important;
  border: 1px solid var(--tiptap-border-color);
  border-radius: 0.5rem;
  padding: 1rem;
  margin: 1rem 0;
  overflow-x: auto;
}

.tiptap-editor .ProseMirror pre code {
  background: transparent !important;
  color: var(--tiptap-text-color) !important;
  padding: 0;
}

/* Links */
.tiptap-editor .ProseMirror a {
  color: var(--tiptap-accent-color) !important;
  text-decoration: underline;
  text-decoration-color: rgba(0, 255, 255, 0.4);
  transition: all 0.2s;
}

.tiptap-editor .ProseMirror a:hover {
  color: rgba(0, 255, 255, 1) !important;
  text-decoration-color: rgba(0, 255, 255, 0.8);
}

/* Selection */
.tiptap-editor .ProseMirror ::selection {
  background: rgba(0, 255, 255, 0.2) !important;
}

/* Placeholder */
.tiptap-editor .ProseMirror .is-editor-empty:first-child::before {
  color: var(--tiptap-muted-color) !important;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

/* Strong and Emphasis */
.tiptap-editor .ProseMirror strong {
  color: var(--tiptap-heading-color) !important;
  font-weight: bold;
}

.tiptap-editor .ProseMirror em {
  color: var(--tiptap-text-color) !important;
  font-style: italic;
}

/* Focus styles */
.tiptap-editor .ProseMirror:focus {
  outline: none;
}

/* Horizontal Rule */
.tiptap-editor .ProseMirror hr {
  border: none;
  border-top: 2px solid var(--tiptap-border-color);
  margin: 2rem 0;
}

/* Hard Break */
.tiptap-editor .ProseMirror .ProseMirror-selectednode {
  outline: 2px solid var(--tiptap-accent-color);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .tiptap-editor .ProseMirror {
    font-size: 14px;
    padding: 0.5rem 0;
  }

  .tiptap-editor .ProseMirror h1 {
    font-size: 1.5rem;
  }

  .tiptap-editor .ProseMirror h2 {
    font-size: 1.25rem;
  }

  .tiptap-editor .ProseMirror h3 {
    font-size: 1.125rem;
  }
}